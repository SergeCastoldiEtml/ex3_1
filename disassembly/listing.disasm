Disassembly Listing for ex3_1
Generated From:
C:/microchip/harmony/v2_06/apps/MINF/Exercices/ex3_1.X/dist/default/production/ex3_1.X.production.elf
22 nov. 2022 10:37:46

---  c:/microchip/harmony/v2_06/apps/minf/exercices/ex3_1.x/main_ex3_1.c  -------------------------------
1:                   #include <stddef.h>                     // Defines NULL
2:                   #include <stdbool.h>                    // Defines true
3:                   #include <stdlib.h>                     // Defines EXIT_FAILURE
4:                   #include <stdint.h>                     // Defines EXIT_FAILURE
5:                   
6:                   void main() {
9D000000  27BDFFE8   ADDIU SP, SP, -24
9D000004  AFBE0014   SW FP, 20(SP)
9D000008  03A0F021   ADDU FP, SP, ZERO
7:                   
8:                      uint8_t i;
9:                      bool bNegatif;
10:                     char c;
11:                     uint8_t code;
12:                  
13:                     int8_t  a = 7;
9D00000C  24020007   ADDIU V0, ZERO, 7
9D000010  A3C20001   SB V0, 1(FP)
14:                     int16_t b = 321;
9D000014  24020141   ADDIU V0, ZERO, 321
9D000018  A7C20002   SH V0, 2(FP)
15:                     int32_t  d = 0x12345678;
9D00001C  3C021234   LUI V0, 4660
9D000020  34425678   ORI V0, V0, 22136
9D000024  AFC20004   SW V0, 4(FP)
16:                  
17:                     // addition 8 bits
18:                     a = a + 0x31;
9D000028  93C20001   LBU V0, 1(FP)
9D00002C  24420031   ADDIU V0, V0, 49
9D000030  304200FF   ANDI V0, V0, 255
9D000034  A3C20001   SB V0, 1(FP)
19:                  
20:                     // addition 16 bits
21:                     b = b + 0x123;
9D000038  97C20002   LHU V0, 2(FP)
9D00003C  24420123   ADDIU V0, V0, 291
9D000040  3042FFFF   ANDI V0, V0, -1
9D000044  A7C20002   SH V0, 2(FP)
22:                  
23:                     // addition 32 bits
24:                    d = d + 0x10000;
9D000048  8FC30004   LW V1, 4(FP)
9D00004C  3C020001   LUI V0, 1
9D000050  00621021   ADDU V0, V1, V0
9D000054  AFC20004   SW V0, 4(FP)
25:                  
26:                     // If then else
27:                     if (a >= 0) {
9D000058  83C20001   LB V0, 1(FP)
9D00005C  04400004   BLTZ V0, 0x9D000070
9D000060  00000000   NOP
28:                        bNegatif = 0;
9D000064  A3C00008   SB ZERO, 8(FP)
9D000068  0B40001E   J 0x9D000078
9D00006C  00000000   NOP
29:                     } else {
30:                        bNegatif = 1;
9D000070  24020001   ADDIU V0, ZERO, 1
9D000074  A3C20008   SB V0, 8(FP)
31:                     }
32:                  
33:                     // boucle for et switch
34:                     for (i=0; i<6 ; i++) {
9D000078  A3C00000   SB ZERO, 0(FP)
9D00007C  0B40003D   J 0x9D0000F4
9D000080  00000000   NOP
9D0000E8  93C20000   LBU V0, 0(FP)
9D0000EC  24420001   ADDIU V0, V0, 1
9D0000F0  A3C20000   SB V0, 0(FP)
9D0000F4  93C20000   LBU V0, 0(FP)
9D0000F8  2C420006   SLTIU V0, V0, 6
9D0000FC  1440FFE1   BNE V0, ZERO, 0x9D000084
9D000100  00000000   NOP
35:                     
36:                        switch (i) {
9D000084  93C20000   LBU V0, 0(FP)
9D000088  24030002   ADDIU V1, ZERO, 2
9D00008C  1043000B   BEQ V0, V1, 0x9D0000BC
9D000090  00000000   NOP
9D000094  24030003   ADDIU V1, ZERO, 3
9D000098  1043000C   BEQ V0, V1, 0x9D0000CC
9D00009C  00000000   NOP
9D0000A0  24030001   ADDIU V1, ZERO, 1
9D0000A4  1443000D   BNE V0, V1, 0x9D0000DC
9D0000A8  00000000   NOP
37:                           case 1 : code = 'A' ; break;
9D0000AC  24020041   ADDIU V0, ZERO, 65
9D0000B0  A3C20009   SB V0, 9(FP)
9D0000B4  0B40003A   J 0x9D0000E8
9D0000B8  00000000   NOP
38:                           case 2 : code = 'B' ; break;
9D0000BC  24020042   ADDIU V0, ZERO, 66
9D0000C0  A3C20009   SB V0, 9(FP)
9D0000C4  0B40003A   J 0x9D0000E8
9D0000C8  00000000   NOP
39:                           case 3 : code = 'C' ; break;
9D0000CC  24020043   ADDIU V0, ZERO, 67
9D0000D0  A3C20009   SB V0, 9(FP)
9D0000D4  0B40003A   J 0x9D0000E8
9D0000D8  00000000   NOP
40:                           default : code = 'Z'; break;
9D0000DC  2402005A   ADDIU V0, ZERO, 90
9D0000E0  A3C20009   SB V0, 9(FP)
9D0000E4  00000000   NOP
41:                        }
42:                     }
43:                  
44:                     // boucle while
45:                     i=10;
9D000104  2402000A   ADDIU V0, ZERO, 10
9D000108  A3C20000   SB V0, 0(FP)
46:                     while (i > 0 ) {
9D00010C  0B400048   J 0x9D000120
9D000110  00000000   NOP
9D000120  93C20000   LBU V0, 0(FP)
9D000124  1440FFFB   BNE V0, ZERO, 0x9D000114
9D000128  00000000   NOP
47:                         i--;
9D000114  93C20000   LBU V0, 0(FP)
9D000118  2442FFFF   ADDIU V0, V0, -1
9D00011C  A3C20000   SB V0, 0(FP)
48:                     }
49:                  }
9D00012C  03C0E821   ADDU SP, FP, ZERO
9D000130  8FBE0014   LW FP, 20(SP)
9D000134  27BD0018   ADDIU SP, SP, 24
9D000138  03E00008   JR RA
9D00013C  00000000   NOP
